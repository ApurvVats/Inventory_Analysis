name: Build and Deploy Backend to Azure App Service

on:
  push:
    branches:
      - main
  workflow_dispatch:

env:
  AZURE_WEBAPP_NAME: 'apurv-analytics-app-2025'
  NODE_VERSION: '22'
  BACKEND_DIRECTORY: 'Backend'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: 1) Checkout Repository
        uses: actions/checkout@v4

      - name: 2) Set up Node.js Environment
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: ${{ env.BACKEND_DIRECTORY }}/package-lock.json

      - name: 3) Install Dependencies & Build
        working-directory: ${{ env.BACKEND_DIRECTORY }}
        run: |
          npm install
          npm run build --if-present

      - name: 4) Generate Prisma Client
        working-directory: ${{ env.BACKEND_DIRECTORY }}
        run: npx prisma generate

      - name: 5) Upload Artifact for Deployment
        uses: actions/upload-artifact@v4
        with:
          name: node-app-package
          path: |
            ${{ env.BACKEND_DIRECTORY }}/dist
            ${{ env.BACKEND_DIRECTORY }}/node_modules
            ${{ env.BACKEND_DIRECTORY }}/package.json
            ${{ env.BACKEND_DIRECTORY }}/package-lock.json
            ${{ env.BACKEND_DIRECTORY }}/ecosystem.config.js
            ${{ env.BACKEND_DIRECTORY }}/prisma
            ${{ env.BACKEND_DIRECTORY }}/server.js

  deploy:
    runs-on: ubuntu-latest
    needs: build
    environment:
      name: 'Production'
      url: ${{ steps.deploy-to-webapp.outputs.webapp-url }}
    permissions:
      id-token: write
      contents: read
    steps:
      - name: 1) Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: node-app-package
          path: ./release

      - name: 2) Login to Azure
        uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZUREAPPSERVICE_CLIENTID_DD0399AC79414F2D8524B3DCDB77A214 }}
          tenant-id: ${{ secrets.AZUREAPPSERVICE_TENANTID_70F3721AED054CBA99744E8457234734 }}
          subscription-id: ${{ secrets.AZUREAPPSERVICE_SUBSCRIPTIONID_198C34FCABB4466E862601E08DB285F0 }}

      - name: 3) Run Prisma migrations (production)
        working-directory: ./release
        run: npx --yes prisma migrate deploy
        env:
          DATABASE_URL: ${{ secrets.DATABASE_URL }}

      - name: 4) Deploy to Azure Web App
        id: deploy-to-webapp
        uses: azure/webapps-deploy@v3
        with:
          app-name: ${{ env.AZURE_WEBAPP_NAME }}
          package: ./release
          startup-command: 'npm start'